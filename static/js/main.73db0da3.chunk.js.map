{"version":3,"sources":["shared/components/Navigation/MainHeader.js","shared/components/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/NewPlace.js","places/pages/UpdatePlace.js","user/pages/Auth.js","App.js","serviceWorker.js","index.js"],"names":["MainHeader","children","className","AuthContext","createContext","isLoggedIn","login","logout","Button","props","href","size","inverse","danger","to","exact","type","onClick","disabled","NavLinks","auth","useContext","SideDrawer","show","content","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","ReactDOM","createPortal","document","querySelector","Backdrop","getElementById","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Avatar","style","src","image","alt","width","height","Card","UserItem","id","name","placeCount","UsersList","items","length","map","places","key","User","ModalOverlay","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","onCancel","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","layers","layer","Tile","source","OSM","Vector","features","Feature","geometry","geom","Point","proj","fromLonLat","lng","lat","view","View","ref","PlaceItem","description","title","address","coordinates","creator","showMap","setShowMap","closeMapHandler","showConfirmModal","setShowConfirmModal","console","log","PlaceList","imageUrl","location","DUMMY","UserPlaces","userId","useParams","loadedPlaces","filter","place","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","label","element","rows","placeholder","errorText","onInput","valid","initialState","useReducer","inputState","dispatch","changeHandler","touchHandler","el","onChange","onBlur","htmlFor","formReducer","inputId","inputs","formIsValid","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","NewPlace","inputHandler","DUMMY_PLACES","UpdatePlace","isLoading","setIsLoading","placeId","setFormData","identifiedPlace","find","p","Auth","isLogin","setIsLogin","email","password","undefined","preMode","App","routes","setIsLoggedIn","path","Users","Provider","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"ikBAaeA,G,YAVI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACI,6BACI,4BAAQC,UAAU,eAAeD,MCJhCE,G,MAAcC,wBAAc,CACrCC,YAAY,EACZC,MAAO,aACPC,OAAQ,gBCqCGC,G,MArCA,SAAAC,GACX,OAAIA,EAAMC,KAEF,uBACIR,UAAS,yBAAoBO,EAAME,MAAQ,UAAlC,YAA+CF,EAAMG,SAC1D,kBADK,YACgBH,EAAMI,QAAU,kBACzCH,KAAMD,EAAMC,MAEXD,EAAMR,UAIfQ,EAAMK,GAEF,kBAAC,IAAD,CACIA,GAAIL,EAAMK,GACVC,MAAON,EAAMM,MACbb,UAAS,yBAAoBO,EAAME,MAAQ,UAAlC,YAA+CF,EAAMG,SAC1D,kBADK,YACgBH,EAAMI,QAAU,mBAExCJ,EAAMR,UAKf,4BACIC,UAAS,yBAAoBO,EAAME,MAAQ,UAAlC,YAA+CF,EAAMG,SAC1D,kBADK,YACgBH,EAAMI,QAAU,kBACzCG,KAAMP,EAAMO,KACZC,QAASR,EAAMQ,QACfC,SAAUT,EAAMS,UAEfT,EAAMR,YCHJkB,EA5BE,SAAAV,GACb,IAAMW,EAAOC,qBAAWlB,GACxB,OACI,wBAAID,UAAU,aACV,4BACI,kBAAC,IAAD,CAASY,GAAG,IAAIC,OAAK,GAArB,cAIHK,EAAKf,YAAc,4BAChB,kBAAC,IAAD,CAASS,GAAG,cAAZ,cAGHM,EAAKf,YAAc,4BAChB,kBAAC,IAAD,CAASS,GAAG,eAAZ,eAEFM,EAAKf,YAAc,4BACjB,kBAAC,IAAD,CAASS,GAAG,SAAZ,iBAEHM,EAAKf,YAAc,4BAChB,4BAAQY,QAASG,EAAKb,QAAtB,a,QCADe,G,MApBI,SAAC,GAAiC,IAA/BrB,EAA8B,EAA9BA,SAAUsB,EAAoB,EAApBA,KAAMN,EAAc,EAAdA,QAC5BO,EACF,kBAACC,EAAA,EAAD,CACIC,GAAIH,EACJI,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEb,2BAAO5B,UAAU,cAAce,QAASA,GACnChB,IAKb,OAAO8B,IAASC,aACZR,EACAS,SAASC,cAAc,mBCXhBC,G,MAPE,SAAA1B,GACf,OAAOsB,IAASC,aACd,yBAAK9B,UAAU,WAAWe,QAASR,EAAMQ,UACzCgB,SAASG,eAAe,oBCwCbC,EAvCQ,SAAA5B,GAAU,IAAD,EACY6B,oBAAS,GADrB,mBACrBC,EADqB,KACPC,EADO,KAMtBC,EAAqB,WACvBD,GAAgB,IAEpB,OACI,kBAAC,WAAD,KACKD,GAAgB,kBAAC,EAAD,CAAUtB,QAASwB,IACpC,kBAAC,EAAD,CAAYxB,QAASwB,EAAoBlB,KAAMgB,GAC3C,yBAAKrC,UAAU,+BACX,kBAAC,EAAD,QAGR,kBAAC,EAAD,KACI,4BACIA,UAAU,4BACVe,QAjBU,WACtBuB,GAAgB,KAkBJ,+BACA,+BACA,gCAEJ,wBAAItC,UAAU,0BACV,kBAAC,IAAD,CAAMY,GAAG,KAAT,iBAEJ,yBAAKZ,UAAU,+BACX,kBAAC,EAAD,UCvBLwC,G,MAZA,SAAAjC,GACb,OACE,yBAAKP,UAAS,iBAAYO,EAAMP,WAAayC,MAAOlC,EAAMkC,OACxD,yBACEC,IAAKnC,EAAMoC,MACXC,IAAKrC,EAAMqC,IACXH,MAAO,CAAEI,MAAOtC,EAAMsC,MAAOC,OAAQvC,EAAMsC,YCEpCE,G,MARF,SAAAxC,GACX,OACE,yBAAKP,UAAS,eAAUO,EAAMP,WAAayC,MAAOlC,EAAMkC,OACrDlC,EAAMR,YCqBEiD,G,MAtBE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,GAAIN,EAA8B,EAA9BA,MAAOO,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACjC,OACI,wBAAInD,UAAU,aACV,kBAAC,EAAD,CAAMA,UAAU,sBACZ,kBAAC,IAAD,CAAMY,GAAE,WAAMqC,EAAN,YACJ,yBAAKjD,UAAU,oBACX,kBAAC,EAAD,CAAQ2C,MAAOA,EAAOC,IAAKM,KAE/B,yBAAKlD,UAAU,mBACX,4BAAKkD,GACL,4BACKC,EADL,IACiC,IAAfA,EAAmB,QAAU,gBCmBxDC,G,MA9BG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OAAIA,EAAMC,OAAS,EAEX,wBAAItD,UAAU,cACTqD,EAAME,KAAI,YAAkC,IAA/BN,EAA8B,EAA9BA,GAAIN,EAA0B,EAA1BA,MAAOO,EAAmB,EAAnBA,KAAMM,EAAa,EAAbA,OAC3B,OACI,kBAAC,EAAD,CACIC,IAAKR,EACLC,KAAMA,EACNP,MAAOA,EACPM,GAAIA,EACJE,WAAYK,QAQ5B,yBAAKxD,UAAU,UACX,kBAAC,EAAD,KACI,kDCVL0D,EAdF,WAST,OAAO,kBAAC,EAAD,CAAWL,MARJ,CACV,CACIJ,GAAI,MACJC,KAAM,SACNP,MAAO,sDACPa,OAAQ,OCFdG,G,YAAe,SAAApD,GACjB,IAAMe,EACF,yBAAKtB,UAAS,gBAAWO,EAAMP,WAAayC,MAAOlC,EAAMkC,OACrD,4BAAQzC,UAAS,wBAAmBO,EAAMqD,cACtC,4BAAKrD,EAAMsD,SAEf,0BAAMC,SAAUvD,EAAMuD,SAAWvD,EAAMuD,SAAW,SAAAC,GAAK,OAAIA,EAAMC,mBAC7D,yBAAKhE,UAAS,yBAAoBO,EAAM0D,eACnC1D,EAAMR,UAEX,4BAAQ0C,MAAO,CACX,aAAc,QACfzC,UAAS,wBAAmBO,EAAM2D,cAChC3D,EAAM4D,UAKvB,OAAOtC,IAASC,aAAaR,EAASS,SAASG,eAAe,iBAoBnDkC,EAjBD,SAAA7D,GACV,OACI,kBAAC,IAAM8D,SAAP,KACK9D,EAAMc,MAAQ,kBAAC,EAAD,CAAUN,QAASR,EAAM+D,WACxC,kBAAC/C,EAAA,EAAD,CACIC,GAAIjB,EAAMc,KACVM,cAAY,EACZC,eAAa,EACbH,QAAS,IACTC,WAAW,SAEX,kBAAC,EAAiBnB,MCKnBgE,G,MAxCH,SAAAhE,GACR,IAAMiE,EAASC,mBAEPC,EAAiBnE,EAAjBmE,OAAQC,EAASpE,EAAToE,KA2BhB,OA1BAC,qBAAU,WACN,IAAIC,OAAOC,GAAGP,IAAI,CACdQ,OAAQP,EAAOQ,QAAQ/B,GACvBgC,OAAQ,CACJ,IAAIJ,OAAOC,GAAGI,MAAMC,KAAK,CACrBC,OAAQ,IAAIP,OAAOC,GAAGM,OAAOC,MAEjC,IAAIR,OAAOC,GAAGI,MAAMI,OAAO,CACvBF,OAAQ,IAAIP,OAAOC,GAAGM,OAAOE,OAAO,CAChCC,SAAU,CACN,IAAIV,OAAOC,GAAGU,QAAQ,CAClBC,SAAU,IAAIZ,OAAOC,GAAGY,KAAKC,MACzBd,OAAOC,GAAGc,KAAKC,WAAW,CAACnB,EAAOoB,IAAKpB,EAAOqB,eAOtEC,KAAM,IAAInB,OAAOC,GAAGmB,KAAK,CACrBvB,OAAQG,OAAOC,GAAGc,KAAKC,WAAW,CAACnB,EAAOoB,IAAKpB,EAAOqB,MACtDpB,KAAMA,QAGf,CAACD,EAAQC,IAGR,yBACIuB,IAAK1B,EACLxE,UAAS,cAASO,EAAMP,WACxByC,MAAOlC,EAAMkC,MACbQ,GAAG,UCsCAkD,EAnEG,SAAC,GAAsE,IAApElD,EAAmE,EAAnEA,GAAImD,EAA+D,EAA/DA,YAAazD,EAAkD,EAAlDA,MAAO0D,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,QAAkBC,GAAkB,EAA3BC,QAA2B,EAAlBD,aAAkB,EACtDnE,oBAAS,GAD6C,mBAC7EqE,EAD6E,KACpEC,EADoE,KAG9EC,EAAkB,kBAAMD,GAAW,IAH2C,EAIpCtE,oBAAS,GAJ2B,mBAI7EwE,EAJ6E,KAI3DC,EAJ2D,KAc9E3F,EAAOC,qBAAWlB,GACxB,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CACIoB,KAAMoF,EACNnC,SAAUqC,EACV9C,OAAQyC,EACRrC,aAAa,4BACbC,YAAY,4BACZC,OAAQ,kBAAC,EAAD,CAAQpD,QAAS4F,GAAjB,UAER,yBAAK3G,UAAU,iBACX,uCACA,kBAAC,EAAD,CAAK0E,OAAQ6B,EAAa5B,KAAM,MAGxC,kBAAC,EAAD,CACItD,KAAMuF,EACN/C,OAAO,gBAAgBK,YAAY,4BAA4BC,OAC3D,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAQpD,QA1BA,WACxB8F,GAAoB,IAyBkCnG,SAAO,GAA7C,UACA,kBAAC,EAAD,CAAQK,QAxBC,WACzB+F,QAAQC,IAAI,cAuBI,YAGR,4HAEJ,wBAAI/G,UAAU,cACV,kBAAC,EAAD,CAAMA,UAAU,uBACZ,yBAAKA,UAAU,qBACX,yBAAK0C,IAAKC,EAAOC,IAAKyD,KAE1B,yBAAKrG,UAAU,oBACX,4BAAKqG,GACL,4BAAKC,GACL,2BAAIF,IAER,yBAAKpG,UAAU,uBACX,kBAAC,EAAD,CAAQU,SAAO,EAACK,QAjDb,kBAAM2F,GAAW,KAiDpB,eACCxF,EAAKf,YACF,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAQS,GAAE,kBAAaqC,IAAvB,QACA,kBAAC,EAAD,CAAQlC,QAlDH,WAC7B8F,GAAoB,IAiD+ClG,QAAM,GAAjD,gBC3BjBqG,G,MA/BG,SAAC,GAAe,IAAb3D,EAAY,EAAZA,MACjB,OAAqB,IAAjBA,EAAMC,OAEF,yBAAKtD,UAAU,qBACX,kBAAC,EAAD,KACI,kEACA,kBAAC,EAAD,CAAQY,GAAG,eAAX,iBAMZ,wBAAIZ,UAAU,cACTqD,EAAME,KAAI,YAAuE,IAApEN,EAAmE,EAAnEA,GAAImD,EAA+D,EAA/DA,YAAaa,EAAkD,EAAlDA,SAAUZ,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASE,EAAwB,EAAxBA,QAASU,EAAe,EAAfA,SAC9D,OAAO,kBAAC,EAAD,CACHzD,IAAKR,EACLA,GAAIA,EACJN,MAAOsE,EACPZ,MAAOA,EACPD,YAAaA,EACbE,QAASA,EACTE,QAASA,EACTD,YAAaW,UCxB3BC,EAAQ,CAEV,CACIlE,GAAI,KACJoD,MAAO,6BACPD,YAAa,oBACba,SAAU,uEACVX,QAAS,mBACTY,SAAU,CACNnB,IAAK,WACLD,KAAM,YAEVU,QAAS,MAGb,CACIvD,GAAI,KACJoD,MAAO,qBACPD,YAAa,oBACba,SAAU,kGACVX,QAAS,mBACTY,SAAU,CACNnB,IAAK,WACLD,KAAM,YAEVU,QAAS,OAYFY,EARI,WAAO,IACdC,EAAWC,cAAXD,OACFE,EAAeJ,EAAMK,QAAO,SAAAC,GAAK,OAAIA,EAAMjB,UAAYa,KAC7D,OAAO,kBAAC,EAAD,CAAWhE,MAAOkE,K,eC3BhBG,G,MAAsB,SAAAC,GAAG,MAAK,CACvC7G,KAV6B,YAW7B6G,IAAKA,KAUIC,EAAW,SAACC,EAAOC,GAC5B,IAAIC,GAAU,EAD6B,uBAE3C,YAAwBD,EAAxB,+CAAoC,CAAC,IAA1BE,EAAyB,QAxBT,YAyBnBA,EAAUlH,OACViH,EAAUA,GAAWF,EAAMI,OAAO3E,OAAS,GAzBtB,cA2BrB0E,EAAUlH,OACViH,EAAUA,GAAWF,EAAMI,OAAO3E,QAAU0E,EAAUL,KA3BjC,cA6BrBK,EAAUlH,OACViH,EAAUA,GAAWF,EAAMI,OAAO3E,QAAU0E,EAAUL,KA7BvC,QA+BfK,EAAUlH,OACViH,EAAUA,IAAYF,GAASG,EAAUL,KA/B1B,QAiCfK,EAAUlH,OACViH,EAAUA,IAAYF,GAASG,EAAUL,KAjCxB,UAmCjBK,EAAUlH,OACViH,EAAUA,GAAW,iBAAiBG,KAAKL,KAnBR,kFAsB3C,OAAOE,GCvCLI,EAAe,SAACC,EAAOC,GACzB,OAAQA,EAAOvH,MACX,IAAK,SACD,OAAO,eACAsH,EADP,CAEIP,MAAOQ,EAAOV,IACdI,QAASH,EAASS,EAAOV,IAAKU,EAAOP,cAE7C,IAAK,QACD,OAAO,eACAM,EADP,CAEIE,WAAW,IAEnB,QACI,OAAOF,IAwEJG,EAnED,SAAC,GAYR,IAXHtF,EAWE,EAXFA,GACAuF,EAUE,EAVFA,MACAC,EASE,EATFA,QACAC,EAQE,EARFA,KACAC,EAOE,EAPFA,YACA7H,EAME,EANFA,KACA8H,EAKE,EALFA,UACAd,EAIE,EAJFA,WACAe,EAGE,EAHFA,QACAC,EAEE,EAFFA,MAGMC,EAAe,CACjBlB,MAFF,EADFA,OAGkB,GACdE,QAASe,IAAS,EAClBR,WAAW,GAJb,EAM6BU,qBAAWb,EAAcY,GANtD,mBAMKE,EANL,KAMiBC,EANjB,KAOKrB,EAAkBoB,EAAlBpB,MAAOE,EAAWkB,EAAXlB,QACdnD,qBAAU,WACNiE,EAAQ5F,EAAI4E,EAAOE,KACpB,CAAC9E,EAAI4E,EAAOE,EAASc,IAGxB,IAAMM,EAAgB,SAAApF,GAClBmF,EAAS,CACLpI,KAAM,SACN6G,IAAK5D,EAAMgB,OAAO8C,MAClBC,WAAYA,KAGdsB,EAAe,WACjBF,EAAS,CACLpI,KAAM,WAGRuI,EAAiB,UAAZZ,EAAsB,2BAC7Ba,SAAUH,EACVlG,GAAIA,EACJnC,KAAMA,EACN6H,YAAaA,EACbd,MAAOoB,EAAWpB,MAClB0B,OAAQH,IACP,8BACGE,SAAUH,EACVlG,GAAIA,EACJyF,KAAMA,GAAQ,EACdb,MAAOoB,EAAWpB,MAClB0B,OAAQH,IAGhB,OACI,yBAAKpJ,UAAS,wBAAmBiJ,EAAWlB,SAAWkB,EAAWX,WAAa,0BAC3E,2BAAOkB,QAASvG,GAAKuF,GAEjBa,GAEFJ,EAAWlB,SAAWkB,EAAWX,WAAa,2BAAIM,K,QCjF1Da,EAAc,SAACrB,EAAD,GAAuD,IAA7CtH,EAA4C,EAA5CA,KAAMiH,EAAsC,EAAtCA,QAAS2B,EAA6B,EAA7BA,QAAS7B,EAAoB,EAApBA,MAAO8B,EAAa,EAAbA,OACzD,OAAQ7I,GACJ,IAAK,eACD,IAAI8I,GAAc,EAClB,IAAK,IAAInG,KAAO2E,EAAMuB,OACbvB,EAAMuB,OAAOlG,KAIdmG,EADAnG,IAAQiG,EACME,GAAe7B,EAEf6B,GAAexB,EAAMuB,OAAOlG,GAAKsE,SAGvD,OAAO,eACAK,EADP,CAEIuB,OAAO,eACAvB,EAAMuB,OADP,eAEDD,EAAU,CACP7B,QACAE,aAGRA,QAAS6B,IAEjB,IAAK,WACD,MAAO,CACHD,OAAQA,EACR5B,QAASA,GAEjB,QACI,OAAOK,IAINyB,EAAU,SAACC,EAAeC,GAAyB,IAAD,EAC7Bf,qBAAWS,EAAa,CAClDE,OAAQG,EACR/B,QAASgC,IAH8C,mBACpDC,EADoD,KACzCd,EADyC,KAwB3D,MAAO,CAACc,EAnBaC,uBAAY,SAAChH,EAAI4E,EAAOE,GACzCjB,QAAQC,IAAI9D,GACZ6D,QAAQC,IAAI,UAAWc,GACvBf,QAAQC,IAAI,YAAagB,GACzBmB,EAAS,CACLpI,KAAM,eACN+G,QACA6B,QAASzG,EACT8E,cAEL,IAEiBkC,uBAAY,SAACC,EAAWC,GACxCjB,EAAS,CACLpI,KAAM,WACN6I,OAAQO,EACRN,YAAaO,MAElB,MCSQC,EAzDE,SAAA7J,GAAU,IAAD,EACYsJ,EAAQ,CACtCxD,MAAO,CACHwB,MAAO,GACPE,SAAS,GAEb3B,YAAa,CACTyB,MAAO,GACPE,SAAS,GAEbzB,QAAS,CACLuB,MAAO,GACPE,SAAS,KAEd,GAdmB,mBACfiC,EADe,KACJK,EADI,KAqBtB,OAAO,0BAAMvG,SAJc,SAAAC,GACvBA,EAAMC,iBACN8C,QAAQC,IAAIiD,EAAUL,SAEiB3J,UAAU,cACjD,kBAAC,EAAD,CACIiD,GAAG,QACHnC,KAAK,OACL2H,QAAQ,QACRD,MAAM,QACNV,WAAY,CH9BgB,CAAEhH,KARX,YGuCnB8H,UAAU,6BACVC,QAASwB,IAEb,kBAAC,EAAD,CACIpH,GAAG,cACHnC,KAAK,OACL2H,QAAQ,WACRD,MAAM,cACNV,WAAY,CAACJ,EAAoB,IACjCkB,UAAU,2DACVC,QAASwB,IAEb,kBAAC,EAAD,CACIpH,GAAG,UACHnC,KAAK,OACL2H,QAAQ,QACRD,MAAM,UACNV,WAAY,CHhDgB,CAAEhH,KARX,YGyDnB8H,UAAU,+BACVC,QAASwB,IAEb,kBAAC,EAAD,CAAQvJ,KAAK,SAASE,UAAWgJ,EAAUjC,SAA3C,eClDFuC,EAAe,CACjB,CACIrH,GAAI,KACJoD,MAAO,wBACPD,YAAa,oDACba,SACI,8HACJX,QAAS,mCACTY,SAAU,CACNnB,IAAK,WACLD,KAAM,YAEVU,QAAS,MAEb,CACIvD,GAAI,KACJoD,MAAO,sBACPD,YAAa,oDACba,SACI,8HACJX,QAAS,mCACTY,SAAU,CACNnB,IAAK,WACLD,KAAM,YAEVU,QAAS,OAiGF+D,EA9FK,SAAAhK,GAAU,IAAD,EACS6B,oBAAS,GADlB,mBAClBoI,EADkB,KACPC,EADO,KAEnBC,EAAUpD,cAAYoD,QAFH,EAGsBb,EAAQ,CACnDxD,MAAO,CACHwB,MAAO,GACPE,SAAS,GAEb3B,YAAa,CACTyB,MAAO,GACPE,SAAS,KAEd,GAZsB,mBAGlBiC,EAHkB,KAGPK,EAHO,KAGOM,EAHP,KAanBC,EAAkBN,EAAaO,MAAK,SAAAC,GAAC,OAAIA,EAAE7H,KAAOyH,KAGxD9F,qBAAU,WACFgG,GACAD,EACI,CACItE,MAAO,CACHwB,MAAO+C,EAAgBvE,MACvB0B,SAAS,GAEb3B,YAAa,CACTyB,MAAO+C,EAAgBxE,YACvB2B,SAAS,KAGjB,GAGR0C,GAAa,KACd,CAACE,EAAaC,IAOjB,OAAKA,EAUDJ,EAEI,yBAAKxK,UAAU,UACX,2CAKR,0BAAMA,UAAU,aAAa8D,SAvBA,SAAAC,GAC7BA,EAAMC,iBACN8C,QAAQC,IAAIiD,EAAUL,UAsBlB,kBAAC,EAAD,CACI1G,GAAG,QACHwF,QAAQ,QACRD,MAAM,QACN1H,KAAK,OACLgH,WAAY,CJ9FY,CAAEhH,KARX,YIyGf8H,UAAU,6BACVC,QAASwB,EACTxC,MAAOmC,EAAUL,OAAOtD,MAAMwB,MAC9BiB,MAAOkB,EAAUL,OAAOtD,MAAM0B,UAElC,kBAAC,EAAD,CACI9E,GAAG,cACHwF,QAAQ,WACRD,MAAM,cACNV,WAAY,CACRJ,EAAoB,IAExBkB,UAAU,uDACVC,QAASwB,EACTxC,MAAOmC,EAAUL,OAAOvD,YAAYyB,MACpCiB,MAAOkB,EAAUL,OAAOvD,YAAY2B,UAGxC,kBAAC,EAAD,CAAQjH,KAAK,SAASE,SAAUgJ,EAAUlB,OAA1C,iBA3CA,yBAAK9I,UAAU,UACX,kBAAC,EAAD,KACI,wDCYL+K,G,MApFF,SAAAxK,GACT,IAAMW,EAAOC,qBAAWlB,GADN,EAEYmC,oBAAS,GAFrB,mBAEX4I,EAFW,KAEFC,EAFE,OAG6BpB,EAAQ,CACnDqB,MAAO,CACHrD,MAAO,GACPE,SAAS,GAEboD,SAAU,CACNtD,MAAO,GACPE,SAAS,KAEd,GAZe,mBAGXiC,EAHW,KAGAK,EAHA,KAGcM,EAHd,KAuClB,OACI,kBAAC,EAAD,CAAM3K,UAAU,kBACZ,8CACA,6BACA,0BAAM8D,SA7BY,SAAAC,GACtBA,EAAMC,iBACN9C,EAAKd,QACL0G,QAAQC,IAAIiD,EAAUL,WA2BZqB,GAAW,kBAAC,EAAD,CACT/H,GAAG,OACHwF,QAAQ,QACR3H,KAAK,OACL0H,MAAM,YACNV,WAAY,CLnDQ,CAAEhH,KARX,YK4DX+H,QAASwB,EACTzB,UAAU,wBAEd,kBAAC,EAAD,CACI3F,GAAG,QACHwF,QAAQ,QACR3H,KAAK,QACL0H,MAAM,QACNV,WAAY,CLhDM,CAAEhH,KAfX,UKgET8H,UAAU,qCACVC,QAASwB,IAEb,kBAAC,EAAD,CACIpH,GAAG,WACHwF,QAAQ,QACR3H,KAAK,WACL0H,MAAM,WACNV,WAAY,CAACJ,EAAoB,IACjCkB,UAAU,gCACVC,QAASwB,IAEb,kBAAC,EAAD,CAAQvJ,KAAK,SAASE,UAAWgJ,EAAUjC,SACtCiD,EAAU,QAAU,aAG7B,kBAAC,EAAD,CAAQjK,QAxDU,WACjBiK,EAQDL,EAAY,eACLX,EAAUL,OADN,CAEPzG,KAAM,CACF2E,MAAO,GACPE,SAAS,MAGb,IAdJjB,QAAQC,IAAIiD,EAAUL,OAAOuB,MAAMnD,SAAWiC,EAAUL,OAAOwB,SAASpD,SACxE4C,EAAY,eACLX,EAAUL,OADN,CAEPzG,UAAMkI,IAENpB,EAAUL,OAAOuB,MAAMnD,SAAWiC,EAAUL,OAAOwB,SAASpD,UAWpEkD,GAAW,SAAAI,GAAO,OAAKA,MAsCiB3K,SAAO,GAA3C,aAAuDsK,EAAU,WAAa,YCT3EM,MAhEf,WAAgB,IAcRC,EAdO,EACyBnJ,oBAAS,GADlC,mBACJjC,EADI,KACQqL,EADR,KAELpL,EAAQ6J,uBACV,WACIuB,GAAc,KAElB,IAEEnL,EAAS4J,uBACX,WACIuB,GAAc,KAElB,IAwCJ,OApCID,EADApL,EAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOsL,KAAK,IAAI5K,OAAK,GACjB,kBAAC6K,EAAD,OAGJ,kBAAC,IAAD,CAAOD,KAAK,mBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cAAc5K,OAAK,GAC3B,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAO4K,KAAK,mBAAmB5K,OAAK,GAChC,kBAAC,EAAD,OAIJ,kBAAC,IAAD,CAAUD,GAAG,OAKjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6K,KAAK,IAAI5K,OAAK,GACjB,kBAAC6K,EAAD,OAEJ,kBAAC,IAAD,CAAOD,KAAK,mBACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAU7K,GAAG,WAKrB,kBAACX,EAAY0L,SAAb,CAAsB9D,MAAO,CAAE1H,aAAYC,QAAOC,WAC9C,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,8BACKkL,MCzDDK,QACW,cAA7B/G,OAAOqC,SAAS2E,UAEe,UAA7BhH,OAAOqC,SAAS2E,UAEhBhH,OAAOqC,SAAS2E,SAASC,MACvB,2DCZNjK,IAASkK,OAAO,kBAAC,EAAD,MAAShK,SAASG,eAAe,SD6H3C,kBAAmB8J,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzF,QAAQyF,MAAMA,EAAMC,c","file":"static/js/main.73db0da3.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './MainHeader.css'\nconst MainHeader = ({ children }) => {\n    return (\n        <div>\n            <header className=\"main-header\">{children}</header>\n        </div>\n    )\n}\n\nMainHeader.propTypes = {}\n\nexport default MainHeader\n","import { createContext } from 'react'\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    login: () => { },\n    logout: () => { }\n})\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || 'default'} ${props.inverse &&\n                    'button--inverse'} ${props.danger && 'button--danger'}`}\n                href={props.href}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || 'default'} ${props.inverse &&\n                    'button--inverse'} ${props.danger && 'button--danger'}`}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || 'default'} ${props.inverse &&\n                'button--inverse'} ${props.danger && 'button--danger'}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport './NavLinks.css'\nimport { AuthContext } from '../context/auth-context'\nimport Button from '../FormElements/Button'\nconst NavLinks = props => {\n    const auth = useContext(AuthContext)\n    return (\n        <ul className=\"nav-links\">\n            <li>\n                <NavLink to=\"/\" exact>\n                    All Users\n                </NavLink>\n            </li>\n            {auth.isLoggedIn && <li>\n                <NavLink to=\"/u1/places\">My Places</NavLink>\n            </li>}\n\n            {auth.isLoggedIn && <li>\n                <NavLink to=\"/places/new\">Add Place</NavLink>\n            </li>}\n            {!auth.isLoggedIn && <li>\n                <NavLink to=\"/auth\">Authenticate</NavLink>\n            </li>}\n            {auth.isLoggedIn && <li>\n                <button onClick={auth.logout}>Logout</button>\n            </li>}\n        </ul>\n    )\n}\n\nNavLinks.propTypes = {}\n\nexport default NavLinks\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nimport './SideDrawer.css'\nconst SideDrawer = ({ children, show, onClick }) => {\n    const content = (\n        <CSSTransition\n            in={show}\n            timeout={2000}\n            classNames=\"slide-in-left\"\n            mountOnEnter\n            unmountOnExit\n        >\n            <aside className=\"side-drawer\" onClick={onClick}>\n                {children}\n            </aside>\n        </CSSTransition>\n    )\n\n    return ReactDOM.createPortal(\n        content,\n        document.querySelector('#drawer-hook')\n    )\n}\nexport default SideDrawer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './MainNavigation.css'\nimport MainHeader from './MainHeader'\nimport NavLinks from './NavLinks'\nimport SideDrawer from './SideDrawer'\nimport { Link } from 'react-router-dom'\nimport './MainNavigation.css'\nimport Backdrop from '../UIElements/Backdrop'\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true)\n    }\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false)\n    }\n    return (\n        <Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}></Backdrop>}\n            <SideDrawer onClick={closeDrawerHandler} show={drawerIsOpen}>\n                <nav className=\"main-navigation__drawer-nav\">\n                    <NavLinks></NavLinks>\n                </nav>\n            </SideDrawer>\n            <MainHeader>\n                <button\n                    className=\"main-navigation__menu-btn\"\n                    onClick={openDrawerHandler}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </button>\n                <h1 className=\"main-navigation__title\">\n                    <Link to=\"/\"> Your Places</Link>\n                </h1>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks></NavLinks>\n                </nav>\n            </MainHeader>\n        </Fragment>\n    )\n}\n\nMainNavigation.propTypes = {}\n\nexport default MainNavigation\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Avatar from '../../shared/components/UIElements/Avatar'\nimport Card from '../../shared/components/UIElements/Card'\nimport { Link } from 'react-router-dom'\nimport './UserItem.css'\nconst UserItem = ({ id, image, name, placeCount }) => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${id}/places`}>\n                    <div className=\"user-item__image\">\n                        <Avatar image={image} alt={name}></Avatar>\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{name}</h2>\n                        <h3>\n                            {placeCount} {placeCount === 1 ? 'Place' : 'Places'}\n                        </h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    )\n}\n\nUserItem.propTypes = {}\n\nexport default UserItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport UserItem from './UserItem'\nimport Card from '../../shared/components/UIElements/Card'\n\nimport './UsersList.css'\nconst UsersList = ({ items }) => {\n    if (items.length > 0) {\n        return (\n            <ul className=\"users-list\">\n                {items.map(({ id, image, name, places }) => {\n                    return (\n                        <UserItem\n                            key={id}\n                            name={name}\n                            image={image}\n                            id={id}\n                            placeCount={places}\n                        />\n                    )\n                })}\n            </ul>\n        )\n    } else {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No sers found.</h2>\n                </Card>\n            </div>\n        )\n    }\n}\n\nUsersList.propTypes = {}\n\nexport default UsersList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport UsersList from '../components/UsersList'\nconst User = () => {\n    const users = [\n        {\n            id: '123',\n            name: 'Joseph',\n            image: 'https://image.flaticon.com/icons/svg/194/194938.svg',\n            places: 3\n        }\n    ]\n    return <UsersList items={users} />\n}\n\nUser.propTypes = {}\n\nexport default User\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()} >\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer style={{\n                    'margin-top': '30px'\n                }} className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel} />}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames=\"modal\"\n            >\n                <ModalOverlay {...props} />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nexport default Modal;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n    const mapRef = useRef();\n\n    const { center, zoom } = props;\n    useEffect(() => {\n        new window.ol.Map({\n            target: mapRef.current.id,\n            layers: [\n                new window.ol.layer.Tile({\n                    source: new window.ol.source.OSM()\n                }),\n                new window.ol.layer.Vector({\n                    source: new window.ol.source.Vector({\n                        features: [\n                            new window.ol.Feature({\n                                geometry: new window.ol.geom.Point(\n                                    window.ol.proj.fromLonLat([center.lng, center.lat])\n                                )\n                            })\n                        ]\n                    })\n                })\n            ],\n            view: new window.ol.View({\n                center: window.ol.proj.fromLonLat([center.lng, center.lat]),\n                zoom: zoom\n            })\n        });\n    }, [center, zoom]);\n\n    return (\n        <div\n            ref={mapRef}\n            className={`map ${props.className}`}\n            style={props.style}\n            id=\"map\"\n        ></div>\n    );\n};\n\nexport default Map;","import React, { useState, Fragment, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '../../shared/components/UIElements/Card'\nimport './PlaceItem.css'\nimport Modal from '../../shared/components/UIElements/Modal'\n\nimport Button from '../../shared/components/FormElements/Button'\n\nimport Map from '../../shared/components/UIElements/Map'\nimport { AuthContext } from '../../shared/components/context/auth-context'\nconst PlaceItem = ({ id, description, image, title, address, creator, coordinates }) => {\n    const [showMap, setShowMap] = useState(false)\n    const openMapHandler = () => setShowMap(true)\n    const closeMapHandler = () => setShowMap(false)\n    const [showConfirmModal, setShowConfirmModal] = useState(false)\n    const showDeleteWarningHandler = () => {\n        setShowConfirmModal(true)\n    }\n    const cancelDeleteHandler = () => {\n        setShowConfirmModal(false)\n    }\n    const confirmDeleteHandler = () => {\n        console.log('Deleting')\n    }\n    const auth = useContext(AuthContext)\n    return (\n        <Fragment>\n            <Modal\n                show={showMap}\n                onCancel={closeMapHandler}\n                header={address}\n                contentClass=\"place-item__modal-content\"\n                footerClass=\"place-item__modal-actions\"\n                footer={<Button onClick={closeMapHandler}>Close</Button>}\n            >\n                <div className=\"map-container\">\n                    <h2>The map</h2>\n                    <Map center={coordinates} zoom={5}></Map>\n                </div>\n            </Modal>\n            <Modal\n                show={showConfirmModal}\n                header=\"Are you sure?\" footerClass=\"place-item__modal-actions\" footer={\n                    <Fragment>\n                        <Button onClick={cancelDeleteHandler} inverse>Cancel</Button>\n                        <Button onClick={confirmDeleteHandler}>Delete</Button>\n                    </Fragment>\n                }>\n                <p>Do you want to proceed and delete this place? Please not that is cannot be undone thereafter</p>\n            </Modal>\n            <li className=\"place-item\">\n                <Card className=\"place-item__content\">\n                    <div className=\"place-item__image\">\n                        <img src={image} alt={title}></img>\n                    </div>\n                    <div className=\"place-item__info\">\n                        <h2>{title}</h2>\n                        <h3>{address}</h3>\n                        <p>{description}</p>\n                    </div>\n                    <div className=\"place-item__actions\">\n                        <Button inverse onClick={openMapHandler}>View on map</Button>\n                        {auth.isLoggedIn &&\n                            <Fragment>\n                                <Button to={`/places/${id}`}>Edit</Button>\n                                <Button onClick={showDeleteWarningHandler} danger>Delete</Button>\n                            </Fragment>\n                        }\n                    </div>\n                </Card>\n            </li>\n        </Fragment>\n    )\n}\n\nPlaceItem.propTypes = {}\n\nexport default PlaceItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '../../shared/components/UIElements/Card'\nimport PlaceItem from './PlaceItem'\nimport Button from '../../shared/components/FormElements/Button'\nimport './PlaceList.css'\n\nconst PlaceList = ({ items }) => {\n    if (items.length === 0) {\n        return (\n            <div className=\"place-list center\">\n                <Card>\n                    <h2>No places found. Maybe create one?</h2>\n                    <Button to=\"/places/new\">Share Place</Button>\n                </Card>\n            </div>\n        )\n    }\n    return (\n        <ul className=\"place-list\">\n            {items.map(({ id, description, imageUrl, title, address, creator, location }) => {\n                return <PlaceItem\n                    key={id}\n                    id={id}\n                    image={imageUrl}\n                    title={title}\n                    description={description}\n                    address={address}\n                    creator={creator}\n                    coordinates={location}\n                ></PlaceItem>\n            })}\n        </ul>\n    )\n}\n\nPlaceList.propTypes = {}\n\nexport default PlaceList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PlaceList from '../components/PlaceList'\nimport { useParams } from 'react-router-dom'\n\nconst DUMMY = [\n\n    {\n        id: 'p1',\n        title: 'Great Wall Mongolian B.B.Q',\n        description: 'lorem ipsum .....',\n        imageUrl: 'https://s3-media0.fl.yelpcdn.com/bphoto/ZWJVPaU3wnBsPp2hulvnqQ/o.jpg',\n        address: '1234 Test Street',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u1'\n\n    },\n    {\n        id: 'p2',\n        title: 'Great German B.B.Q',\n        description: 'lorem ipsum .....',\n        imageUrl: 'https://lh5.googleusercontent.com/p/AF1QipO8LpFNUgwv65iB4IoQIXRKG1QOEdBISAxqYpBT=w408-h306-k-no',\n        address: '1234 Test Street',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n\n    }\n]\nconst UserPlaces = () => {\n    const { userId } = useParams()\n    const loadedPlaces = DUMMY.filter(place => place.creator === userId)\n    return <PlaceList items={loadedPlaces}></PlaceList>\n}\n\nUserPlaces.propTypes = {}\n\nexport default UserPlaces\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    for (const validator of validators) {\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n            isValid = isValid && value.trim().length > 0;\n        }\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n            isValid = isValid && value.trim().length >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n            isValid = isValid && value.trim().length <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MIN) {\n            isValid = isValid && +value >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAX) {\n            isValid = isValid && +value <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n        }\n    }\n    return isValid;\n};\n","import React, { useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport './Input.css'\nimport { validate } from '../../util/validators'\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            }\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state\n    }\n}\n\n\nconst Input = ({\n    id,\n    label,\n    element,\n    rows,\n    placeholder,\n    type,\n    errorText,\n    validators,\n    onInput,\n    valid,\n    value: val\n}) => {\n    const initialState = {\n        value: val || '',\n        isValid: valid || false,\n        isTouched: false\n    }\n    const [inputState, dispatch] = useReducer(inputReducer, initialState)\n    const {value, isValid} = inputState\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput])\n    \n    \n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE',\n            val: event.target.value,\n            validators: validators\n        })\n    }\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n    const el = element === 'input' ? <input\n        onChange={changeHandler}\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        value={inputState.value}\n        onBlur={touchHandler}\n    /> : <textarea\n            onChange={changeHandler}\n            id={id}\n            rows={rows || 3}\n            value={inputState.value}\n            onBlur={touchHandler}\n        />\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={id}>{label}</label>\n            {\n                el\n            }\n            {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\n        </div>\n    )\n}\n\nInput.propTypes = {\n\n}\n\nexport default Input\n","import { useCallback, useReducer } from 'react'\nconst formReducer = (state, { type, isValid, inputId, value, inputs }) => {\n    switch (type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true\n            for (let key in state.inputs) {\n                if (!state.inputs[key]) {\n                    continue;\n                }\n                if (key === inputId) {\n                    formIsValid = formIsValid && isValid\n                } else {\n                    formIsValid = formIsValid && state.inputs[key].isValid\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [inputId]: {\n                        value,\n                        isValid\n                    }\n                },\n                isValid: formIsValid\n            }\n        case 'SET_DATA':\n            return {\n                inputs: inputs,\n                isValid: isValid\n            }\n        default:\n            return state\n    }\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    })\n    const inputHandler = useCallback((id, value, isValid) => {\n        console.log(id)\n        console.log('value: ', value)\n        console.log('isValid: ', isValid)\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value,\n            inputId: id,\n            isValid\n        })\n    }, [])\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        })\n    }, []);\n    return [formState, inputHandler, setFormData]\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './PlaceForm.css';\nimport Input from '../../shared/components/FormElements/Input'\n\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators'\n\nimport Button from '../../shared/components/FormElements/Button'\n\nimport { useForm } from '../../shared/hooks/form-hook'\n\nconst NewPlace = props => {\n    const [formState, inputHandler] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        },\n        address: {\n            value: '',\n            isValid: false\n        }\n    }, false)\n\n\n    const placeSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs); // send this to the backend!\n    };\n    return <form onSubmit={placeSubmitHandler} className=\"place-form\">\n        <Input\n            id=\"title\"\n            type=\"text\"\n            element=\"input\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"description\"\n            type=\"text\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters)\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"address\"\n            type=\"text\"\n            element=\"input\"\n            label=\"Address\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid address\"\n            onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Add place\n        </Button>\n    </form>\n}\n\nNewPlace.propTypes = {}\n\nexport default NewPlace\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../shared/components/FormElements/Button'\nimport Input from '../../shared/components/FormElements/Input'\nimport './PlaceForm.css';\nimport { useParams } from 'react-router-dom'\nimport { useForm } from '../../shared/hooks/form-hook'\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators'\nimport Card from '../../shared/components/UIElements/Card';\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Empire State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl:\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Emp. State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl:\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n    }\n];\nconst UpdatePlace = props => {\n    const [isLoading, setIsLoading] = useState(true);\n    const placeId = useParams().placeId\n    const [formState, inputHandler, setFormData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, false)\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId)\n\n\n    useEffect(() => {\n        if (identifiedPlace) {\n            setFormData(\n                {\n                    title: {\n                        value: identifiedPlace.title,\n                        isValid: true\n                    },\n                    description: {\n                        value: identifiedPlace.description,\n                        isValid: true\n                    }\n                },\n                true\n            );\n        }\n        setIsLoading(false);\n    }, [setFormData, identifiedPlace]);\n\n    const placeUpdateSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n    };\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>Could not find place!</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                <h2>Loading...</h2>\n            </div>\n        );\n    }\n    return (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n            <Input\n                id=\"title\"\n                element=\"input\"\n                label=\"title\"\n                type=\"text\"\n                validators={[\n                    VALIDATOR_REQUIRE()\n                ]}\n                errorText=\"PLease enter a valid title\"\n                onInput={inputHandler}\n                value={formState.inputs.title.value}\n                valid={formState.inputs.title.isValid}\n            ></Input>\n            <Input\n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[\n                    VALIDATOR_MINLENGTH(5)\n                ]}\n                errorText=\"PLease enter a valid description (min. 5 characters)\"\n                onInput={inputHandler}\n                value={formState.inputs.description.value}\n                valid={formState.inputs.description.isValid}\n            ></Input>\n\n            <Button type=\"submit\" disabled={formState.valid}>Update Place</Button>\n        </form>\n    )\n}\n\nUpdatePlace.propTypes = {\n\n}\n\nexport default UpdatePlace\n","import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport './Auth.css'\nimport Card from '../../shared/components/UIElements/Card'\nimport Button from '../../shared/components/FormElements/Button'\nimport Input from '../../shared/components/FormElements/Input'\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\nimport { useForm } from '../../shared/hooks/form-hook'\nimport { AuthContext } from '../../shared/components/context/auth-context'\n\nconst Auth = props => {\n    const auth = useContext(AuthContext)\n    const [isLogin, setIsLogin] = useState(true)\n    const [formState, inputHandler, setFormData] = useForm({\n        email: {\n            value: '',\n            isValid: false\n        },\n        password: {\n            value: '',\n            isValid: false,\n        }\n    }, false)\n\n    const authSubmitHandler = event => {\n        event.preventDefault()\n        auth.login()\n        console.log(formState.inputs)\n    }\n    const switchModeHandler = () => {\n        if (!isLogin) {\n            console.log(formState.inputs.email.isValid && formState.inputs.password.isValid)\n            setFormData({\n                ...formState.inputs,\n                name: undefined\n            },\n                formState.inputs.email.isValid && formState.inputs.password.isValid)\n        } else {\n            setFormData({\n                ...formState.inputs,\n                name: {\n                    value: '',\n                    isValid: false\n                }\n            },\n                false)\n        }\n        setIsLogin(preMode => !preMode)\n    }\n    return (\n        <Card className=\"authentication\">\n            <h2>Login required</h2>\n            <hr></hr>\n            <form onSubmit={authSubmitHandler}>\n                {!isLogin && <Input\n                    id=\"name\"\n                    element=\"input\"\n                    type=\"text\"\n                    label=\"Your name\"\n                    validators={[VALIDATOR_REQUIRE()]}\n                    onInput={inputHandler}\n                    errorText=\"Please enter a name\"\n                ></Input>}\n                <Input\n                    id=\"email\"\n                    element=\"input\"\n                    type=\"email\"\n                    label=\"Email\"\n                    validators={[VALIDATOR_EMAIL()]}\n                    errorText=\"Please enter a valid email address\"\n                    onInput={inputHandler}\n                ></Input>\n                <Input\n                    id=\"password\"\n                    element=\"input\"\n                    type=\"password\"\n                    label=\"Password\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid password\"\n                    onInput={inputHandler}\n                ></Input>\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    {isLogin ? 'Login' : 'Register'}\n                </Button>\n            </form>\n            <Button onClick={switchModeHandler} inverse>Switch to {isLogin ? 'Register' : 'Login'}</Button>\n        </Card>\n    )\n}\n\nAuth.propTypes = {\n\n}\n\nexport default Auth\n","import React, { useState, useCallback, Fragment } from 'react'\nimport './App.css'\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport Users from './user/pages/Users'\nimport UserPlaces from './places/pages/UserPlaces'\nimport NewPlace from './places/pages/NewPlace'\nimport UpdatePlace from './places/pages/UpdatePlace'\nimport Auth from './user/pages/Auth'\nimport { AuthContext } from './shared/components/context/auth-context'\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    const login = useCallback(\n        () => {\n            setIsLoggedIn(true)\n        },\n        [],\n    )\n    const logout = useCallback(\n        () => {\n            setIsLoggedIn(false)\n        },\n        [],\n    )\n    let routes\n    if (isLoggedIn) {\n        routes = (\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Users></Users>\n                </Route>\n\n                <Route path=\"/:userId/places\">\n                    <UserPlaces></UserPlaces>\n                </Route>\n                <Route path=\"/places/new\" exact>\n                    <NewPlace></NewPlace>\n                </Route>\n                <Route path=\"/places/:placeId\" exact>\n                    <UpdatePlace></UpdatePlace>\n                </Route>\n\n\n                <Redirect to=\"/\"></Redirect>\n            </Switch>\n        )\n    } else {\n        routes = (\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Users></Users>\n                </Route>\n                <Route path=\"/:userId/places\">\n                    <UserPlaces></UserPlaces>\n                </Route>\n                <Route path=\"/auth\">\n                    <Auth></Auth>\n                </Route>\n                <Redirect to=\"/auth\"></Redirect>\n            </Switch>\n        )\n    }\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, login, logout }}>\n            <Router>\n                <MainNavigation></MainNavigation>\n                <main>\n                    {routes}\n                </main>\n            </Router>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}