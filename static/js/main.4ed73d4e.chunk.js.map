{"version":3,"sources":["shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/NewPlace.js","places/pages/UpdatePlace.js","App.js","serviceWorker.js","index.js"],"names":["MainHeader","children","className","NavLinks","props","to","exact","SideDrawer","show","onClick","content","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","ReactDOM","createPortal","document","querySelector","Backdrop","getElementById","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Avatar","style","src","image","alt","width","height","Card","UserItem","id","name","placeCount","UsersList","items","length","map","places","key","User","ModalOverlay","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","onCancel","Button","href","size","inverse","danger","type","disabled","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","layers","layer","Tile","source","OSM","Vector","features","Feature","geometry","geom","Point","proj","fromLonLat","lng","lat","view","View","ref","PlaceItem","description","title","address","coordinates","creator","showMap","setShowMap","closeMapHandler","PlaceList","imageUrl","location","DUMMY","UserPlaces","userId","useParams","loadedPlaces","filter","place","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","label","element","rows","placeholder","errorText","onInput","valid","initialState","useReducer","inputState","dispatch","changeHandler","touchHandler","el","onChange","onBlur","htmlFor","formReducer","inputId","inputs","formIsValid","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","NewPlace","inputHandler","console","log","DUMMY_PLACES","UpdatePlace","isLoading","setIsLoading","placeId","setFormData","identifiedPlace","find","p","App","path","Users","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4ed73d4e.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './MainHeader.css'\nconst MainHeader = ({ children }) => {\n    return (\n        <div>\n            <header className=\"main-header\">{children}</header>\n        </div>\n    )\n}\n\nMainHeader.propTypes = {}\n\nexport default MainHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport './NavLinks.css'\nconst NavLinks = props => {\n    return (\n        <ul className=\"nav-links\">\n            <li>\n                <NavLink to=\"/\" exact>\n                    All Users\n                </NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/u1/places\">My Places</NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/places/new\">Add Place</NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/auth\">Authenticate</NavLink>\n            </li>\n        </ul>\n    )\n}\n\nNavLinks.propTypes = {}\n\nexport default NavLinks\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nimport './SideDrawer.css'\nconst SideDrawer = ({ children, show, onClick }) => {\n    const content = (\n        <CSSTransition\n            in={show}\n            timeout={2000}\n            classNames=\"slide-in-left\"\n            mountOnEnter\n            unmountOnExit\n        >\n            <aside className=\"side-drawer\" onClick={onClick}>\n                {children}\n            </aside>\n        </CSSTransition>\n    )\n\n    return ReactDOM.createPortal(\n        content,\n        document.querySelector('#drawer-hook')\n    )\n}\nexport default SideDrawer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { Fragment, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './MainNavigation.css'\nimport MainHeader from './MainHeader'\nimport NavLinks from './NavLinks'\nimport SideDrawer from './SideDrawer'\nimport { Link } from 'react-router-dom'\nimport './MainNavigation.css'\nimport Backdrop from '../UIElements/Backdrop'\nconst MainNavigation = props => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true)\n    }\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false)\n    }\n    return (\n        <Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}></Backdrop>}\n            <SideDrawer onClick={closeDrawerHandler} show={drawerIsOpen}>\n                <nav className=\"main-navigation__drawer-nav\">\n                    <NavLinks></NavLinks>\n                </nav>\n            </SideDrawer>\n            <MainHeader>\n                <button\n                    className=\"main-navigation__menu-btn\"\n                    onClick={openDrawerHandler}\n                >\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </button>\n                <h1 className=\"main-navigation__title\">\n                    <Link to=\"/\"> Your Places</Link>\n                </h1>\n                <nav className=\"main-navigation__header-nav\">\n                    <NavLinks></NavLinks>\n                </nav>\n            </MainHeader>\n        </Fragment>\n    )\n}\n\nMainNavigation.propTypes = {}\n\nexport default MainNavigation\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Avatar from '../../shared/components/UIElements/Avatar'\nimport Card from '../../shared/components/UIElements/Card'\nimport { Link } from 'react-router-dom'\nimport './UserItem.css'\nconst UserItem = ({ id, image, name, placeCount }) => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${id}/places`}>\n                    <div className=\"user-item__image\">\n                        <Avatar image={image} alt={name}></Avatar>\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{name}</h2>\n                        <h3>\n                            {placeCount} {placeCount === 1 ? 'Place' : 'Places'}\n                        </h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    )\n}\n\nUserItem.propTypes = {}\n\nexport default UserItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport UserItem from './UserItem'\nimport Card from '../../shared/components/UIElements/Card'\n\nimport './UsersList.css'\nconst UsersList = ({ items }) => {\n    if (items.length > 0) {\n        return (\n            <ul className=\"users-list\">\n                {items.map(({ id, image, name, places }) => {\n                    return (\n                        <UserItem\n                            key={id}\n                            name={name}\n                            image={image}\n                            id={id}\n                            placeCount={places}\n                        />\n                    )\n                })}\n            </ul>\n        )\n    } else {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No sers found.</h2>\n                </Card>\n            </div>\n        )\n    }\n}\n\nUsersList.propTypes = {}\n\nexport default UsersList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport UsersList from '../components/UsersList'\nconst User = () => {\n    const users = [\n        {\n            id: '123',\n            name: 'Joseph',\n            image: 'https://image.flaticon.com/icons/svg/194/194938.svg',\n            places: 3\n        }\n    ]\n    return <UsersList items={users} />\n}\n\nUser.propTypes = {}\n\nexport default User\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()} >\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel} />}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames=\"modal\"\n            >\n                <ModalOverlay {...props} />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || 'default'} ${props.inverse &&\n                    'button--inverse'} ${props.danger && 'button--danger'}`}\n                href={props.href}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || 'default'} ${props.inverse &&\n                    'button--inverse'} ${props.danger && 'button--danger'}`}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || 'default'} ${props.inverse &&\n                'button--inverse'} ${props.danger && 'button--danger'}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n    const mapRef = useRef();\n\n    const { center, zoom } = props;\n    useEffect(() => {\n        new window.ol.Map({\n            target: mapRef.current.id,\n            layers: [\n                new window.ol.layer.Tile({\n                    source: new window.ol.source.OSM()\n                }),\n                new window.ol.layer.Vector({\n                    source: new window.ol.source.Vector({\n                        features: [\n                            new window.ol.Feature({\n                                geometry: new window.ol.geom.Point(\n                                    window.ol.proj.fromLonLat([center.lng, center.lat])\n                                )\n                            })\n                        ]\n                    })\n                })\n            ],\n            view: new window.ol.View({\n                center: window.ol.proj.fromLonLat([center.lng, center.lat]),\n                zoom: zoom\n            })\n        });\n    }, [center, zoom]);\n\n    return (\n        <div\n            ref={mapRef}\n            className={`map ${props.className}`}\n            style={props.style}\n            id=\"map\"\n        ></div>\n    );\n};\n\nexport default Map;","import React, { useState, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '../../shared/components/UIElements/Card'\nimport './PlaceItem.css'\nimport Modal from '../../shared/components/UIElements/Modal'\n\nimport Button from '../../shared/components/FormElements/Button'\n\nimport Map from '../../shared/components/UIElements/Map'\nconst PlaceItem = ({ id, description, image, title, address, creator, coordinates }) => {\n    const [showMap, setShowMap] = useState(false)\n    const openMapHandler = () => setShowMap(true)\n    const closeMapHandler = () => setShowMap(false)\n\n    return (\n        <Fragment>\n            <Modal\n                show={showMap}\n                onCancel={closeMapHandler}\n                header={address}\n                contentClass=\"place-item__modal-content\"\n                footerClass=\"place-item__modal-actions\"\n                footer={<Button onClick={closeMapHandler}>Close</Button>}\n            >\n                <div className=\"map-container\">\n                    <h2>The map</h2>\n                    <Map center={coordinates} zoom={5}></Map>\n                </div>\n            </Modal>\n            <li className=\"place-item\">\n                <Card className=\"place-item__content\">\n                    <div className=\"place-item__image\">\n                        <img src={image} alt={title}></img>\n                    </div>\n                    <div className=\"place-item__info\">\n                        <h2>{title}</h2>\n                        <h3>{address}</h3>\n                        <p>{description}</p>\n                    </div>\n                    <div className=\"place-item__actions\">\n                        <Button inverse onClick={openMapHandler}>View on map</Button>\n                        <Button to={`/places/${id}`}>Edit</Button>\n                        <Button danger to={`/places/${id}`}>Delete</Button>\n                    </div>\n                </Card>\n            </li>\n        </Fragment>\n    )\n}\n\nPlaceItem.propTypes = {}\n\nexport default PlaceItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '../../shared/components/UIElements/Card'\nimport PlaceItem from './PlaceItem'\nimport Button from '../../shared/components/FormElements/Button'\nimport './PlaceList.css'\n\nconst PlaceList = ({ items }) => {\n    if (items.length === 0) {\n        return (\n            <div className=\"place-list center\">\n                <Card>\n                    <h2>No places found. Maybe create one?</h2>\n                    <Button to=\"/places/new\">Share Place</Button>\n                </Card>\n            </div>\n        )\n    }\n    return (\n        <ul className=\"place-list\">\n            {items.map(({ id, description, imageUrl, title, address, creator, location }) => {\n                return <PlaceItem\n                    key={id}\n                    id={id}\n                    image={imageUrl}\n                    title={title}\n                    description={description}\n                    address={address}\n                    creator={creator}\n                    coordinates={location}\n                ></PlaceItem>\n            })}\n        </ul>\n    )\n}\n\nPlaceList.propTypes = {}\n\nexport default PlaceList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PlaceList from '../components/PlaceList'\nimport { useParams } from 'react-router-dom'\n\nconst DUMMY = [\n\n    {\n        id: 'p1',\n        title: 'Great Wall Mongolian B.B.Q',\n        description: 'lorem ipsum .....',\n        imageUrl: 'https://s3-media0.fl.yelpcdn.com/bphoto/ZWJVPaU3wnBsPp2hulvnqQ/o.jpg',\n        address: '1234 Test Street',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u1'\n\n    },\n    {\n        id: 'p2',\n        title: 'Great German B.B.Q',\n        description: 'lorem ipsum .....',\n        imageUrl: 'https://lh5.googleusercontent.com/p/AF1QipO8LpFNUgwv65iB4IoQIXRKG1QOEdBISAxqYpBT=w408-h306-k-no',\n        address: '1234 Test Street',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n\n    }\n]\nconst UserPlaces = () => {\n    const { userId } = useParams()\n    const loadedPlaces = DUMMY.filter(place => place.creator === userId)\n    return <PlaceList items={loadedPlaces}></PlaceList>\n}\n\nUserPlaces.propTypes = {}\n\nexport default UserPlaces\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    for (const validator of validators) {\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n            isValid = isValid && value.trim().length > 0;\n        }\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n            isValid = isValid && value.trim().length >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n            isValid = isValid && value.trim().length <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MIN) {\n            isValid = isValid && +value >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAX) {\n            isValid = isValid && +value <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n        }\n    }\n    return isValid;\n};\n","import React, { useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport './Input.css'\nimport { validate } from '../../util/validators'\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            }\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state\n    }\n}\n\n\nconst Input = ({\n    id,\n    label,\n    element,\n    rows,\n    placeholder,\n    type,\n    errorText,\n    validators,\n    onInput,\n    valid,\n    value: val\n}) => {\n    const initialState = {\n        value: val || '',\n        isValid: valid || false,\n        isTouched: false\n    }\n    const [inputState, dispatch] = useReducer(inputReducer, initialState)\n    const {value, isValid} = inputState\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput])\n    \n    \n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE',\n            val: event.target.value,\n            validators: validators\n        })\n    }\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n    const el = element === 'input' ? <input\n        onChange={changeHandler}\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        value={inputState.value}\n        onBlur={touchHandler}\n    /> : <textarea\n            onChange={changeHandler}\n            id={id}\n            rows={rows || 3}\n            value={inputState.value}\n            onBlur={touchHandler}\n        />\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={id}>{label}</label>\n            {\n                el\n            }\n            {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\n        </div>\n    )\n}\n\nInput.propTypes = {\n\n}\n\nexport default Input\n","import { useCallback, useReducer } from 'react'\nconst formReducer = (state, { type, isValid, inputId, value, inputs }) => {\n    switch (type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true\n            for (let key in state.inputs) {\n                if (key === inputId) {\n                    formIsValid = formIsValid && isValid\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [inputId]: {\n                        value,\n                        isValid\n                    }\n                },\n                isValid: formIsValid\n            }\n        case 'SET_DATA':\n            return {\n                ...state,\n                inputs: inputs,\n                isValid: isValid\n            }\n        default:\n            return state\n    }\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    })\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value,\n            inputId: id,\n            isValid\n        })\n    }, [])\n    \n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        })\n    })\n    return [formState, inputHandler, setFormData]\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './PlaceForm.css';\nimport Input from '../../shared/components/FormElements/Input'\n\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators'\n\nimport Button from '../../shared/components/FormElements/Button'\n\nimport { useForm } from '../../shared/hooks/form-hook'\n\nconst NewPlace = props => {\n    const [formState, inputHandler] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        },\n        address: {\n            value: '',\n            isValid: false\n        }\n    }, false)\n\n\n    const placeSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs); // send this to the backend!\n    };\n    return <form onSubmit={placeSubmitHandler} className=\"place-form\">\n        <Input\n            id=\"title\"\n            type=\"text\"\n            element=\"input\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"description\"\n            type=\"text\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid description (at least 5 characters)\"\n            onInput={inputHandler}\n        />\n        <Input\n            id=\"address\"\n            type=\"text\"\n            element=\"input\"\n            label=\"Address\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid address\"\n            onInput={inputHandler}\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n            Add place\n        </Button>\n    </form>\n}\n\nNewPlace.propTypes = {}\n\nexport default NewPlace\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../shared/components/FormElements/Button'\nimport Input from '../../shared/components/FormElements/Input'\nimport './PlaceForm.css';\nimport { useParams } from 'react-router-dom'\nimport { useForm } from '../../shared/hooks/form-hook'\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators'\nimport Card from '../../shared/components/UIElements/Card';\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Empire State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl:\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Emp. State Building',\n        description: 'One of the most famous sky scrapers in the world!',\n        imageUrl:\n            'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat: 40.7484405,\n            lng: -73.9878584\n        },\n        creator: 'u2'\n    }\n];\nconst UpdatePlace = props => {\n    const [isLoading, setIsLoading] = useState(true);\n    const placeId = useParams().placeId\n    const [formState, inputHandler, setFormData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, false)\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId)\n\n\n    useEffect(() => {\n        if (identifiedPlace) {\n            setFormData(\n                {\n                    title: {\n                        value: identifiedPlace.title,\n                        isValid: true\n                    },\n                    description: {\n                        value: identifiedPlace.description,\n                        isValid: true\n                    }\n                },\n                true\n            );\n        }\n        setIsLoading(false);\n    }, [setFormData, identifiedPlace]);\n\n    const placeUpdateSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState.inputs);\n    };\n\n    if (!identifiedPlace) {\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>Could not find place!</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    if (isLoading) {\n        return (\n            <div className=\"center\">\n                <h2>Loading...</h2>\n            </div>\n        );\n    }\n    return (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n            <Input\n                id=\"title\"\n                element=\"input\"\n                label=\"title\"\n                type=\"text\"\n                validators={[\n                    VALIDATOR_REQUIRE()\n                ]}\n                errorText=\"PLease enter a valid title\"\n                onInput={inputHandler}\n                value={formState.inputs.title.value}\n                valid={formState.inputs.title.isValid}\n            ></Input>\n            <Input\n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                validators={[\n                    VALIDATOR_MINLENGTH(5)\n                ]}\n                errorText=\"PLease enter a valid description (min. 5 characters)\"\n                onInput={inputHandler}\n                value={formState.inputs.description.value}\n                valid={formState.inputs.description.isValid}\n            ></Input>\n\n            <Button type=\"submit\" disabled={formState.valid}>Update Place</Button>\n        </form>\n    )\n}\n\nUpdatePlace.propTypes = {\n\n}\n\nexport default UpdatePlace\n","import React from 'react'\nimport './App.css'\n\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport MainNavigation from './shared/components/Navigation/MainNavigation'\nimport Users from './user/pages/Users'\nimport UserPlaces from './places/pages/UserPlaces'\nimport NewPlace from './places/pages/NewPlace'\nimport UpdatePlace from './places/pages/UpdatePlace'\n\nfunction App() {\n    return (\n        <Router>\n            <MainNavigation></MainNavigation>\n            <main>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <Users></Users>\n                    </Route>\n                    <Route path=\"/places/new\" exact>\n                        <NewPlace></NewPlace>\n                    </Route>\n                    <Route path=\"/:userId/places\">\n                        <UserPlaces></UserPlaces>\n                    </Route>\n                    <Route path=\"/places/:placeId\">\n                        <UpdatePlace></UpdatePlace>\n                    </Route>\n                    <Redirect to=\"/\"></Redirect>\n                </Switch>\n            </main>\n        </Router>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}